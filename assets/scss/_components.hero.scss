/*------------------------------------*\
  #HERO
\*------------------------------------*/

// TODO: Make mixin/sassmap to handle heroes
// @mixin hero($color, $image-id) {
//
// }

.hero {

  position: relative;
  padding-top: double($spacing-unit);
  // margin-bottom: double($spacing-unit);

  h1 {
    color: $color-red;
    // @include font-size(56px);
    font-weight: 300;
    margin-bottom: double($spacing-unit);
    a {
      color: $color-white;
    }
  }

  p {
    color: $color-gold-dark;
    font-family: $header-font-family;
    font-weight: 500;
    @include font-size(27px, 1.5)
    margin-bottom: double($spacing-unit);
  }

}

h1.hero__text {
  .animate {
    @include mui-animation(fade, slide($direction: down));
    animation-duration: 1s;
  }
  color: $color-gray-dark;
  font-weight: normal;

  @include breakpoint(small) {
    @include font-size(28px, 1.5);
  }

  @include breakpoint(medium) {
    @include font-size(48px, 1.4);
  }
  padding-bottom: $spacing-unit;
}

p.hero__text {
  @include font-size(28px, 1.5);
  color: $color-black;
  // font-size: rem-calc(24);
}

.hero--front {
  border-bottom: 10px solid $color-red-dark;
  h1 {
    @include font-size(56px);
    margin-bottom: double($spacing-unit);
    @include breakpoint(medium) {
      @include font-size(80px);
    }
  }
  p {
    @include breakpoint(medium) {
      @include font-size(32px, 1.5);
    }
  }
  // background-color: #c3af59;
  @include breakpoint(medium) {
    // min-height: 598px;
    text-align: right;
    background-image: url('../images/digital-honeycomb-4.jpg');
    background-repeat: no-repeat;
    background-position: -800px 0;
    // background-position-x: 100%;
    padding: 0;
  }
  @include breakpoint(large) {
    background-position: -650px 0;
  }
  @include breakpoint(xlarge) {
    background-position: -550px 0;
  }
  @include breakpoint(xxlarge) {
    background-position: -500px 0;
  }
}

.diagonals {
  @include breakpoint(medium only) {
    h1 {
      @include font-size(52px);
    }
    p {
      @include font-size(30px, 1.4);
      padding-left: 50px;
    }
  }
  @include breakpoint(medium) {
    // position: absolute;
    // position: relative;
    padding: $spacing-unit $spacing-unit quadruple($spacing-unit) rem-calc(200);
    // padding: $spacing-unit 0 85px 340px;
    // background-color: $color-white;
    background-image: url('../images/hero-diagonal-bars-2.png');
    background-repeat: no-repeat;
    background-position: -150px 0;
    // background-position-y: bottom;
  }
  @include breakpoint(large) {
    position: relative;
    padding: $spacing-unit 0 quadruple($spacing-unit) rem-calc(300);
    background-position: 0 0;
    p {
      padding-left: 100px;
    }
    // padding-left: 400px;
  }
}


.hero--dark {
  h1.hero__text {
    color: $color-white;
  }
  p.hero__text {
    color: $color-white;
  }
}

.hero__image {
  min-height: 300px;
  background-position: center top, center center;
  background-repeat: repeat-x, no-repeat;
  background-size: auto, cover;
}

// Give the image a bottom shadow
// http://stackoverflow.com/questions/5115427/how-can-i-add-a-box-shadow-on-one-side-of-an-element
.hero__image:after {
  display:    block;
  content:    '';
  position:   absolute;
  width:      100%;
  height:     6px;
  bottom:     0;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0));
}

.hero__image--gold-1 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gold-1.jpg');
}

.hero__image--gold-2 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gold-2.jpg');
}

.hero__image--gold-3 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gold-3.jpg');
}

.hero__image--gold-4 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gold-4.jpg');
}

.hero__image--gray-1 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gray-1.jpg');
}

.hero__image--gray-2 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gray-2.jpg');
}

.hero__image--gray-3 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gray-3.jpg');
}

.hero__image--gray-4 {
  background-image: url('../images/triple-border-red.png'), url('../images/header-gray-4.jpg');
}

.hero__image--red-1 {
  background-image: url('../images/triple-border-gold.png'), url('../images/header-red-1.jpg');
}

.hero__image--red-2 {
  background-image: url('../images/triple-border-gold.png'), url('../images/header-red-2.jpg');
}

.hero__image--red-3 {
  background-image: url('../images/triple-border-gold.png'), url('../images/header-red-3.jpg');
}



// $hero-border-width:   50px;
// $hero-border-width:   100px;
// $hero-max-height:     480px;

/**
 * The site’s hero can have two different states:
 *
 * 1) Regular hero with no backgrounds or extra treatments; it just
 *    contains the logo and nav.
 * 2) A masthead that has a fluid-height (becoming fixed after a certain point)
 *    which has a large background image, and some supporting text.
 *
 * The regular hero is incredibly simple, but the masthead version has some
 * slightly intermingled dependency with the wrapper that lives inside it.
 */


/**
 * 1. A slightly smaller padding on smaller viewports.
 * 2. Grow to full-sized padding on large enough viewports.
 */
// .hero {
//     @extend %margin-bottom;
//     // border-width: $hero-border-width 0 1px;
//     // border-top-color: $color-hero-border;
//     padding-top:    $spacing-unit; /* [1] */
//     padding-bottom: $spacing-unit; /* [1] */
//     // background-color: $color-hero-background;
//
//     @include media-query(lap-and-up) {
//         border-bottom-style: solid;
//         border-bottom-width: $hero-border-width;
//         border-bottom-color: $color-blue;
//         // padding-top:    $spacing-unit; /* [2] */
//         // padding-bottom: $spacing-unit; /* [2] */
//     }
//
//     @include media-query(desk) {
//       border-bottom-width: halve($hero-border-width);
//     }
//
// }





/**
 * Large site headers act more like mastheads. They have a faux-fluid-height
 * which is controlled by the wrapping element inside it.
 *
 * 1. Mastheads will typically have dark backgrounds, so we need to make sure
 *    the contrast is okay. This value is subject to change as the background
 *    image changes.
 * 2. We need to delegate a lot of the masthead’s layout to its wrapper element
 *    rather than the masthead itself: it is to this wrapper that most things
 *    are positioned.
 * 3. The wrapper needs positioning context for us to lay our nav and masthead
 *    text in.
 * 4. Faux-fluid-height technique: simply create the illusion of fluid height by
 *    creating space via a percentage padding, and then position everything over
 *    the top of that. This percentage gives us a 16:9 ratio.
 * 5. When the viewport is at 758px wide, our 16:9 ratio means that the masthead
 *    is currently rendered at 480px high. Let’s…
 * 6. …seamlessly snip off the fluid feature at this height, and…
 * 7. …fix the height at 480px. This means that we should see no jumps in height
 *    as the masthead moves from fluid to fixed. This actual value takes into
 *    account the padding and the top border on the hero itself.
 */
// .hero--masthead {
//     margin-bottom: 0;
//     // background: url(../hero.jpg) center center $color-gray-dark;
//     background-color: $color-gray-dark;
//     color: $color-masthead; /* [1] */
//     // border-top-color: $color-masthead;
//     // border-bottom-width: 0;
//     // box-shadow: 0 0 10px rgba(0, 0, 0, 0.1) inset;
//
//     @include media-query(lap-and-up) {
//         background-image: url(../hero-medium.jpg);
//         @include vendor(background-size, cover);
//     }
//
//     @include media-query(desk) {
//         background-image: url(../hero-large-2.jpg);
//     }
//
//     > .wrapper { /* [2] */
//         position: relative; /* [3] */
//         padding-top: 56.25%; /* [4] */
//
//         @media screen and (min-width: 758px) { /* [5] */
//             padding-top: 0; /* [6] */
//             height: $hero-max-height - double($spacing-unit) - $hero-border-width; /* [7] */
//         }
//
//     }
//
// }

/**
 * Mastheads will have some large text in them. Let’s position that bottom-left for starters.
 * Once the faux-fluid-height feature turns of at 758px we need to position the text
 * relative to the rest of the masthead.
 */
// .hero__text {
//     margin: 0;
//     position: absolute;
//     bottom: 0;
//     left: auto;
//     color: $color-masthead;
//     font-weight: 300;
//     @include font-size(50px);
//
//     @include media-query(lap-and-up) {
//         @include font-size(66px);
//     }
//
//     @media screen and (min-width: 758px) {
//         position: relative;
//     }
//
//     @include media-query(desk) {
//         @include font-size(84px);
//     }
//
// }
